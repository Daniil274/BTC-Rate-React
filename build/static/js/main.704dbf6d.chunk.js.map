{"version":3,"sources":["Calculator.tsx","Rate.tsx","reportWebVitals.ts","index.tsx"],"names":["Calculator","p","CalcContainer","CalcOpenBtn","inBTCRadio","outBTCRadio","frUSDRadio","frRUBRadio","radioExt","toCalculate","resultRUB","calculatorInput","resultUSD","state","RUB","localStorage","getItem","USD","result","React","createRef","calculation","bind","CalcEvent","RadioBoxChange","event","preventDefault","resultFromBTC","inputValue","parseFloat","this","current","value","checked","isNaN","Math","round","setState","toString","toFixed","console","log","target","id","classList","remove","add","onClick","ref","className","onChange","onSubmit","name","type","defaultChecked","htmlFor","Component","Rate","param","usd","base","price","volume","change","rub","getData","a","fetch","responseUSD","json","responseRub","success","ticker","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.704dbf6d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Calculator extends React.Component {\r\n    private CalcContainer: React.RefObject<HTMLDivElement>;\r\n    private CalcOpenBtn: React.RefObject<HTMLButtonElement>;\r\n    private inBTCRadio: React.RefObject<HTMLInputElement>;\r\n    private outBTCRadio: React.RefObject<HTMLInputElement>;\r\n    private frUSDRadio: React.RefObject<HTMLInputElement>;\r\n    private frRUBRadio: React.RefObject<HTMLInputElement>;\r\n    private radioExt: React.RefObject<HTMLDivElement>;\r\n    private toCalculate: React.RefObject<HTMLButtonElement>;\r\n    private resultRUB: React.RefObject<HTMLParagraphElement>;\r\n    private calculatorInput: React.RefObject<HTMLInputElement>;\r\n    private resultUSD: React.RefObject<HTMLParagraphElement>;\r\n\r\n    constructor(p: any) {\r\n        super(p);\r\n        this.state = {\r\n            RUB:localStorage.getItem('RUB'),\r\n            USD:localStorage.getItem('USD'),\r\n            result:{\r\n                RUB:\"\",\r\n                USD:\"\"\r\n            },\r\n        };\r\n        this.resultRUB = React.createRef();\r\n        this.resultUSD = React.createRef();\r\n        this.toCalculate = React.createRef();\r\n        this.CalcContainer = React.createRef();\r\n        this.CalcOpenBtn = React.createRef();\r\n        this.inBTCRadio = React.createRef();\r\n        this.outBTCRadio = React.createRef();\r\n        this.frUSDRadio = React.createRef();\r\n        this.frRUBRadio = React.createRef();\r\n        this.radioExt = React.createRef();\r\n        this.calculatorInput = React.createRef();\r\n        this.calculation = this.calculation.bind(this)\r\n        this.CalcEvent = this.CalcEvent.bind(this);\r\n        this.RadioBoxChange = this.RadioBoxChange.bind(this);\r\n\r\n    }\r\n    calculation(event:any){\r\n        event.preventDefault();\r\n        let inputValue:number = parseFloat(this.calculatorInput.current?.value as string)\r\n        if (this.outBTCRadio.current?.checked){\r\n            if (isNaN(inputValue)) inputValue=1;\r\n            // @ts-ignore\r\n            let resultFromBTC:frBTCOut;\r\n\r\n            resultFromBTC = {\r\n                // @ts-ignore\r\n                RUB:Math.round(parseFloat(this.state.RUB) * inputValue),\r\n                // @ts-ignore\r\n                USD:Math.round(parseFloat(this.state.USD) * inputValue),\r\n            }\r\n            this.setState({result:{USD:resultFromBTC.USD.toString()+' $',RUB:resultFromBTC.RUB.toString()+' ₽'}})\r\n        }if (this.inBTCRadio.current?.checked){\r\n            if (this.frUSDRadio.current?.checked){\r\n                // @ts-ignore\r\n                let result:number = (inputValue/this.state.USD).toFixed(10);\r\n                this.setState({result:{RUB:\"\",USD:result.toString()+'₿'}})\r\n            }else{\r\n                // @ts-ignore\r\n                let result:number = (inputValue/this.state.RUB).toFixed(10);\r\n                this.setState({result:{RUB:result.toString()+'₿',USD:\"\"}})\r\n            }\r\n        }\r\n        // @ts-ignore\r\n        console.log(this.state.result)\r\n    }\r\n    CalcEvent(event: any) {\r\n        event.preventDefault();\r\n        console.log(event.target.id)\r\n        switch (event.target.id) {\r\n            case this.CalcOpenBtn.current?.id:\r\n                console.log('open calc')\r\n                this.CalcContainer.current?.classList.remove('d-none');\r\n                this.CalcContainer.current?.classList.add('show-down');\r\n\r\n                event.target.classList.add('d-none');\r\n                break;\r\n            case \"close-calc\":\r\n                this.CalcContainer.current?.classList.add('d-none');\r\n                this.CalcOpenBtn.current?.classList.remove('d-none');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    RadioBoxChange(event: any) {\r\n        if(this.inBTCRadio.current?.checked){\r\n            this.radioExt.current?.classList.remove('d-none');\r\n        }\r\n        if (this.outBTCRadio.current?.checked){\r\n            this.setState({inBTCRadio: false, outBTCRadio: true})\r\n            this.radioExt.current?.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // @ts-ignore\r\n        return (\r\n            <div>\r\n                <button onClick={this.CalcEvent} ref={this.CalcOpenBtn} id={\"open-calc\"}\r\n                        className=\"btn btn-warning w-100 text-white rounded-0\">Калькулятор\r\n                </button>\r\n                <div ref={this.CalcContainer} className=\"container radio_buttons d-none\" id=\"calculator\">\r\n                    <hr/>\r\n                    <form onChange={this.RadioBoxChange} onSubmit={this.calculation}>\r\n                        <div className=\"d-block\">\r\n                            <div className=\"form-check\"><input ref={this.outBTCRadio} className=\"form-check-input radio\"\r\n                                                               id=\"fr-btc\" name=\"r1\"\r\n                                                               type=\"radio\" defaultChecked={true}/><label\r\n                                className=\"form-check-label\" htmlFor=\"fr-btc\">Из\r\n                                Биткоина</label></div>\r\n\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input radio\" id={\"out-btc\"} name=\"r1\" ref={this.inBTCRadio} type=\"radio\"/><label\r\n                                className=\"form-check-label\" htmlFor=\"out-btc\">В Биткоин</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"m-l-30\">\r\n                            <div className=\"d-none d-block\" id=\"radioExt\" ref={this.radioExt}>\r\n                                <div className=\"form-check\"><input ref={this.frRUBRadio}\r\n                                                                   className=\"form-check-input radio\" id=\"fr-rub\"\r\n                                                                   name=\"r2\" type=\"radio\" value=\"3\"\r\n                                                                   defaultChecked={true}/><label\r\n                                    className=\"form-check-label\" htmlFor=\"fr-rub\">Из\r\n                                    рубля</label></div>\r\n                                <div className=\"form-check\">\r\n                                    <input ref={this.frUSDRadio} className=\"form-check-input radio\" id=\"fr-usd\"\r\n                                           name=\"r2\" type=\"radio\"\r\n                                           value=\"4\" defaultChecked={false}/>\r\n                                    <label className=\"form-check-label\" htmlFor=\"fr-usd\">Из Доллара</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container mt-2\">\r\n                            <input className=\"dark  form-control bg-dark\" ref={this.calculatorInput} id=\"calculator-input\" type=\"number\"/>\r\n                            <button className=\"calc dark form-control btn btn-warning btn-sm\" onClick={this.calculation} ref={this.toCalculate} id=\"calculate-button\"\r\n                                    type=\"submit\">Расчёт\r\n                            </button>\r\n                        </div><div className={\"mt-3\"}><p ref={this.resultUSD} className=\"text-center mb-1\">{\r\n                        // @ts-ignore\r\n\r\n                        this.state.result.USD}</p>\r\n                        <p ref={this.resultRUB} className=\"text-center mb-1\">{\r\n                            // @ts-ignore\r\n\r\n                            this.state.result.RUB}</p></div>\r\n                        <button id={\"close-calc\"} onClick={this.CalcEvent} className=\"btn w-100 text-center\">Скрыть\r\n                        </button>\r\n\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\ninterface frBTCOut{\r\n    RUB:number,\r\n    USD:number\r\n}\r\nexport default Calculator;","import React from \"react\";\r\nimport \"./rate.css\";\r\nclass Rate extends React.Component<any, any>{\r\n    constructor(param: any) {\r\n        super(param);\r\n        this.state={\r\n            usd:{\r\n                base: \"\",\r\n                target: \"\",\r\n                price: null,\r\n                volume: null,\r\n                change: null\r\n            }, rub:{\r\n                base: \"\",\r\n                target: \"\",\r\n                price: null,\r\n                volume: null,\r\n                change: null\r\n            },\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n        this.getData();\r\n    }\r\n    async getData(){\r\n        const responseUSD = await fetch('https://api.cryptonator.com/api/ticker/btc-usd')\r\n        let usd: valuteData = await responseUSD.json()\r\n        const responseRub = await fetch('https://api.cryptonator.com/api/ticker/btc-rub')\r\n        let rub: valuteData = await responseRub.json()\r\n        if(rub.success && usd.success){\r\n            this.setState({\r\n                rub: rub.ticker,\r\n                usd: usd.ticker\r\n            })\r\n            // @ts-ignore\r\n            localStorage.setItem('RUB',rub.ticker.price.toString())\r\n            localStorage.setItem('USD',usd.ticker.price.toString())\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"w-100 d-flex justify-content-center\">\r\n                <div className=\"d-block\">\r\n                <p className={\"rate\"}>USD:<span className=\"value\">{Math.round(this.state.usd.price)}$</span></p>\r\n                <p className={\"rate\"}>RUB:<span className=\"value\">{ Math.round(this.state.rub.price)}₽</span></p>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\ninterface valuteData {\r\n    ticker: {\r\n        base: string,\r\n        target: string,\r\n        price: number,\r\n        volume: number,\r\n        change: number\r\n    },\r\n    timestamp: number,\r\n    success: boolean,\r\n    error: string\r\n}\r\nexport default Rate;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from \"./Calculator\";\nimport Rate from './Rate';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Rate />\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
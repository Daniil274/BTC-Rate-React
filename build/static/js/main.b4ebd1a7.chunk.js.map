{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["state","Rate","param","usd","base","target","price","volume","change","rub","getData","bind","fetch","responseUSD","json","responseRub","success","this","setState","ticker","className","Math","round","React","Component","Calculator","p","CalcContainer","CalcOpenBtn","inBTCRadio","outBTCRadio","frUSDRadio","frRUBRadio","radioExt","toCalculate","resultRUB","calculatorInput","resultUSD","result","RUB","USD","createRef","calculation","CalcEvent","RadioBoxChange","event","preventDefault","resultFromBTC","inputValue","parseFloat","current","value","checked","isNaN","toString","toFixed","id","classList","remove","add","onClick","ref","onChange","onSubmit","name","type","defaultChecked","htmlFor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4ebd1a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./rate.css\";\r\nlet state:any;\r\nexport class Rate extends React.Component<any, any>{\r\n    constructor(param: any) {\r\n        super(param);\r\n        this.state={\r\n            usd:{\r\n                base: \"\" as string,\r\n                target: \"\" as string,\r\n                price: null as number|null,\r\n                volume: null as number|null,\r\n                change: null as number|null\r\n            }, rub:{\r\n                base: \"\" as string,\r\n                target: \"\" as string,\r\n                price: null as number|null,\r\n                volume: null as number|null,\r\n                change: null as number|null,\r\n            },\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n        this.getData();\r\n    }\r\n    private async getData(){\r\n        const responseUSD = await fetch('https://api.cryptonator.com/api/ticker/btc-usd')\r\n        let usd: valuteData = await responseUSD.json()\r\n        const responseRub = await fetch('https://api.cryptonator.com/api/ticker/btc-rub')\r\n        let rub: valuteData = await responseRub.json()\r\n        if(rub.success && usd.success){\r\n            this.setState({\r\n                rub: rub.ticker,\r\n                usd: usd.ticker\r\n            })\r\n            // @ts-ignore\r\n            state = {\r\n                rub: rub.ticker,\r\n                usd: usd.ticker\r\n            };\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"w-100 d-flex justify-content-center\">\r\n                <div className=\"d-block\">\r\n                    <p className={\"rate\"}>USD:<span className=\"value\">{Math.round(this.state.usd.price)}$</span></p>\r\n                    <p className={\"rate\"}>RUB:<span className=\"value\">{ Math.round(this.state.rub.price)}₽</span></p>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport class Calculator extends React.Component {\r\n    private CalcContainer: React.RefObject<HTMLDivElement>;\r\n    private CalcOpenBtn: React.RefObject<HTMLButtonElement>;\r\n    private inBTCRadio: React.RefObject<HTMLInputElement>;\r\n    private outBTCRadio: React.RefObject<HTMLInputElement>;\r\n    private frUSDRadio: React.RefObject<HTMLInputElement>;\r\n    private frRUBRadio: React.RefObject<HTMLInputElement>;\r\n    private radioExt: React.RefObject<HTMLDivElement>;\r\n    private toCalculate: React.RefObject<HTMLButtonElement>;\r\n    private resultRUB: React.RefObject<HTMLParagraphElement>;\r\n    private calculatorInput: React.RefObject<HTMLInputElement>;\r\n    private resultUSD: React.RefObject<HTMLParagraphElement>;\r\n    readonly state:stateType;\r\n    public constructor(p: any) {\r\n        super(p);\r\n\r\n        this.state= {\r\n            result:{\r\n                RUB:\"\" as string,\r\n                USD:\"\" as string\r\n            },\r\n        };\r\n        this.resultRUB = React.createRef();\r\n        this.resultUSD = React.createRef();\r\n        this.toCalculate = React.createRef();\r\n        this.CalcContainer = React.createRef();\r\n        this.CalcOpenBtn = React.createRef();\r\n        this.inBTCRadio = React.createRef();\r\n        this.outBTCRadio = React.createRef();\r\n        this.frUSDRadio = React.createRef();\r\n        this.frRUBRadio = React.createRef();\r\n        this.radioExt = React.createRef();\r\n        this.calculatorInput = React.createRef();\r\n        this.calculation = this.calculation.bind(this)\r\n        this.CalcEvent = this.CalcEvent.bind(this);\r\n        this.RadioBoxChange = this.RadioBoxChange.bind(this);\r\n\r\n    }\r\n    calculation(event:any){\r\n        event.preventDefault();\r\n        let inputValue:number = parseFloat(this.calculatorInput.current?.value as string)\r\n        if (this.outBTCRadio.current?.checked){\r\n            if (isNaN(inputValue)) inputValue=1;\r\n            // @ts-ignore\r\n            let resultFromBTC:frBTCOut;\r\n\r\n            resultFromBTC = {\r\n                // @ts-ignore\r\n                RUB:Math.round(parseFloat(state.rub.price) * inputValue),\r\n                // @ts-ignore\r\n                USD:Math.round(parseFloat(state.usd.price) * inputValue),\r\n            }\r\n            this.setState({result:{USD:resultFromBTC.USD.toString()+' $',RUB:resultFromBTC.RUB.toString()+' ₽'}})\r\n        }if (this.inBTCRadio.current?.checked){\r\n            if (this.frUSDRadio.current?.checked){\r\n                // @ts-ignore\r\n                let result:number = (inputValue/state.usd.price).toFixed(10);\r\n                this.setState({result:{RUB:\"\",USD:result.toString()+'₿'}})\r\n            }else{\r\n                // @ts-ignore\r\n                let result:number = (inputValue/state.rub.price).toFixed(10);\r\n                this.setState({result:{RUB:result.toString()+'₿',USD:\"\"}})\r\n            }\r\n        }\r\n    }\r\n    CalcEvent(event: any) {\r\n        event.preventDefault();\r\n        switch (event.target.id) {\r\n            case this.CalcOpenBtn.current?.id:\r\n                this.CalcContainer.current?.classList.remove('d-none');\r\n                this.CalcContainer.current?.classList.add('show-down');\r\n\r\n                event.target.classList.add('d-none');\r\n                break;\r\n            case \"close-calc\":\r\n                this.CalcContainer.current?.classList.add('d-none');\r\n                this.CalcOpenBtn.current?.classList.remove('d-none');\r\n                this.setState({result:{RUB:\"\",USD:\"\"}})\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    RadioBoxChange(event: any) {\r\n        if(this.inBTCRadio.current?.checked){\r\n            this.radioExt.current?.classList.remove('d-none');\r\n        }\r\n        if (this.outBTCRadio.current?.checked){\r\n            this.setState({inBTCRadio: false, outBTCRadio: true})\r\n            this.radioExt.current?.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // @ts-ignore\r\n        return (\r\n            <div>\r\n                <button onClick={this.CalcEvent} ref={this.CalcOpenBtn} id={\"open-calc\"}\r\n                        className=\"btn btn-warning w-100 text-white rounded-0\">Calculator\r\n                </button>\r\n                <div ref={this.CalcContainer} className=\"container radio_buttons d-none\" id=\"calculator\">\r\n                    <form onChange={this.RadioBoxChange} onSubmit={this.calculation}>\r\n                        <div className=\"d-block\">\r\n                            <div className=\"form-check\"><input ref={this.outBTCRadio} className=\"form-check-input radio\"\r\n                                                               id=\"fr-btc\" name=\"r1\"\r\n                                                               type=\"radio\" defaultChecked={true}/><label\r\n                                className=\"form-check-label\" htmlFor=\"fr-btc\">Из\r\n                                Биткоина</label></div>\r\n\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input radio\" id={\"out-btc\"} name=\"r1\" ref={this.inBTCRadio} type=\"radio\"/><label\r\n                                className=\"form-check-label\" htmlFor=\"out-btc\">В Биткоин</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"m-l-30\">\r\n                            <div className=\"d-none d-block\" id=\"radioExt\" ref={this.radioExt}>\r\n                                <div className=\"form-check\"><input ref={this.frRUBRadio}\r\n                                                                   className=\"form-check-input radio\" id=\"fr-rub\"\r\n                                                                   name=\"r2\" type=\"radio\" value=\"3\"\r\n                                                                   defaultChecked={true}/><label\r\n                                    className=\"form-check-label\" htmlFor=\"fr-rub\">Из\r\n                                    рубля</label></div>\r\n                                <div className=\"form-check\">\r\n                                    <input ref={this.frUSDRadio} className=\"form-check-input radio\" id=\"fr-usd\"\r\n                                           name=\"r2\" type=\"radio\"\r\n                                           value=\"4\" defaultChecked={false}/>\r\n                                    <label className=\"form-check-label\" htmlFor=\"fr-usd\">Из Доллара</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container mt-2\">\r\n                            <input className=\"dark  form-control bg-dark\" ref={this.calculatorInput} id=\"calculator-input\" type=\"number\"/>\r\n                            <button className=\"calc dark form-control btn btn-warning btn-sm\" onClick={this.calculation} ref={this.toCalculate} id=\"calculate-button\"\r\n                                    type=\"submit\">Calculate\r\n                            </button>\r\n                        </div><div className={\"mt-3\"}><p ref={this.resultUSD} className=\"text-center mb-1\">{\r\n                        this.state.result.USD }</p>\r\n                        <p ref={this.resultRUB} className=\"text-center mb-1\">{\r\n                            this.state.result.RUB}</p></div>\r\n                        <button id={\"close-calc\"} onClick={this.CalcEvent} className=\"btn w-100 text-center\">Hide\r\n                        </button>\r\n\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\ntype stateType = {\r\n    result:{\r\n        USD:string,\r\n        RUB:string\r\n    }\r\n}\r\ntype frBTCOut = {\r\n    RUB:number,\r\n    USD:number\r\n}\r\n\r\ninterface valuteData {\r\n    ticker: {\r\n        base: string,\r\n        target: string,\r\n        price: number,\r\n        volume: number,\r\n        change: number\r\n    },\r\n    timestamp: number,\r\n    success: boolean,\r\n    error: string\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Calculator} from \"./App\";\r\nimport {Rate} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Rate />\r\n    <Calculator />\r\n  </React.StrictMode>,\r\n  document.getElementById('btc-rate-checker')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}